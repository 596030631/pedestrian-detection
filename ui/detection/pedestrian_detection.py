# # -*- coding: utf-8 -*-
#
# # Form implementation generated from reading ui file 'pedestrian_detection_UI.ui'
# #
# # Created by: PyQt5 UI code generator 5.15.4
# #
# # WARNING: Any manual changes made to this file will be lost when pyuic5 is
# # run again.  Do not edit this file unless you know what you are doing.
#
#
# from PyQt5 import QtCore, QtGui, QtWidgets
#
#
# class Ui_MainWindow(object):
#     def setupUi(self, MainWindow):
#         MainWindow.setObjectName("MainWindow")
#         MainWindow.resize(1665, 840)
#         MainWindow.setMinimumSize(QtCore.QSize(1665, 840))
#         MainWindow.setMaximumSize(QtCore.QSize(1800, 900))
#         MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
#         icon = QtGui.QIcon()
#         icon.addPixmap(QtGui.QPixmap(":/pic/images/zong.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         MainWindow.setWindowIcon(icon)
#         MainWindow.setStyleSheet("#MainWindow { \n"
# "    \n"
# "    border-image: url(:/pic/images/background.png);\n"
# "\n"
# "}\n"
# "QFrame{\n"
# "background:rgba(0,0,0,0.8);\n"
# "background:rgba(66, 195, 255, 0);\n"
# "}")
#         self.centralwidget = QtWidgets.QWidget(MainWindow)
#         self.centralwidget.setObjectName("centralwidget")
#         self.toolButton_model = QtWidgets.QToolButton(self.centralwidget)
#         self.toolButton_model.setGeometry(QtCore.QRect(60, 150, 50, 50))
#         self.toolButton_model.setMaximumSize(QtCore.QSize(50, 50))
#         self.toolButton_model.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
#         self.toolButton_model.setAutoFillBackground(False)
#         self.toolButton_model.setStyleSheet("background-color: transparent;")
#         icon1 = QtGui.QIcon()
#         icon1.addPixmap(QtGui.QPixmap(":/pic/images/select.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.toolButton_model.setIcon(icon1)
#         self.toolButton_model.setIconSize(QtCore.QSize(40, 40))
#         self.toolButton_model.setObjectName("toolButton_model")
#         self.textEdit_model = QtWidgets.QTextEdit(self.centralwidget)
#         self.textEdit_model.setGeometry(QtCore.QRect(130, 160, 261, 31))
#         self.textEdit_model.setStyleSheet("background-color: transparent;\n"
# "border-color: rgb(0, 170, 255);\n"
# "color: rgb(0, 170, 255);")
#         self.textEdit_model.setObjectName("textEdit_model")
#         self.toolButton_camera = QtWidgets.QToolButton(self.centralwidget)
#         self.toolButton_camera.setGeometry(QtCore.QRect(60, 290, 50, 50))
#         self.toolButton_camera.setMinimumSize(QtCore.QSize(50, 50))
#         self.toolButton_camera.setMaximumSize(QtCore.QSize(50, 50))
#         self.toolButton_camera.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
#         self.toolButton_camera.setStyleSheet("background-color: transparent;")
#         icon2 = QtGui.QIcon()
#         icon2.addPixmap(QtGui.QPixmap(":/pic/images/camera.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.toolButton_camera.setIcon(icon2)
#         self.toolButton_camera.setIconSize(QtCore.QSize(50, 50))
#         self.toolButton_camera.setObjectName("toolButton_camera")
#         self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
#         self.textEdit_2.setGeometry(QtCore.QRect(130, 300, 261, 31))
#         self.textEdit_2.setStyleSheet("background-color: transparent;\n"
# "border-color: rgb(0, 170, 255);\n"
# "color: rgb(0, 170, 255);")
#         self.textEdit_2.setObjectName("textEdit_2")
#         self.toolButton_file = QtWidgets.QToolButton(self.centralwidget)
#         self.toolButton_file.setGeometry(QtCore.QRect(60, 360, 50, 50))
#         self.toolButton_file.setMaximumSize(QtCore.QSize(50, 50))
#         self.toolButton_file.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
#         self.toolButton_file.setStyleSheet("background-color: transparent;")
#         icon3 = QtGui.QIcon()
#         icon3.addPixmap(QtGui.QPixmap(":/pic/images/file.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.toolButton_file.setIcon(icon3)
#         self.toolButton_file.setIconSize(QtCore.QSize(40, 40))
#         self.toolButton_file.setObjectName("toolButton_file")
#         self.textEdit_file = QtWidgets.QTextEdit(self.centralwidget)
#         self.textEdit_file.setGeometry(QtCore.QRect(130, 370, 261, 31))
#         self.textEdit_file.setStyleSheet("background-color: transparent;\n"
# "border-color: rgb(0, 170, 255);\n"
# "color: rgb(0, 170, 255);")
#         self.textEdit_file.setObjectName("textEdit_file")
#         self.toolButton_video = QtWidgets.QToolButton(self.centralwidget)
#         self.toolButton_video.setGeometry(QtCore.QRect(60, 430, 50, 50))
#         self.toolButton_video.setMinimumSize(QtCore.QSize(50, 50))
#         self.toolButton_video.setMaximumSize(QtCore.QSize(50, 50))
#         self.toolButton_video.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
#         self.toolButton_video.setStyleSheet("background-color: transparent;")
#         icon4 = QtGui.QIcon()
#         icon4.addPixmap(QtGui.QPixmap(":/pic/images/video.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.toolButton_video.setIcon(icon4)
#         self.toolButton_video.setIconSize(QtCore.QSize(50, 50))
#         self.toolButton_video.setObjectName("toolButton_video")
#         self.textEdit_video = QtWidgets.QTextEdit(self.centralwidget)
#         self.textEdit_video.setGeometry(QtCore.QRect(130, 440, 261, 31))
#         self.textEdit_video.setStyleSheet("background-color: transparent;\n"
# "border-color: rgb(0, 170, 255);\n"
# "color: rgb(0, 170, 255);")
#         self.textEdit_video.setObjectName("textEdit_video")
#         self.label_title = QtWidgets.QLabel(self.centralwidget)
#         self.label_title.setGeometry(QtCore.QRect(530, 20, 481, 51))
#         self.label_title.setMinimumSize(QtCore.QSize(0, 30))
#         font = QtGui.QFont()
#         font.setFamily("楷体")
#         font.setPointSize(30)
#         font.setBold(False)
#         font.setItalic(False)
#         font.setWeight(50)
#         self.label_title.setFont(font)
#         self.label_title.setStyleSheet("\n"
# "\n"
# "font: 30pt \"楷体\";")
#         self.label_title.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
#         self.label_title.setObjectName("label_title")
#         self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
#         self.pushButton_4.setGeometry(QtCore.QRect(70, 520, 121, 41))
#         self.pushButton_4.setStyleSheet("QPushButton{\n"
# "background:#03a9f4;\n"
# "color:#fff;\n"
# "border-radius:15px;\n"
# "}")
#         self.pushButton_4.setObjectName("pushButton_4")
#         self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
#         self.pushButton_5.setGeometry(QtCore.QRect(270, 520, 121, 41))
#         self.pushButton_5.setStyleSheet("QPushButton{\n"
# "background:#03a9f4;\n"
# "color:#fff;\n"
# "border-radius:15px;\n"
# "}")
#         self.pushButton_5.setObjectName("pushButton_5")
#         self.splitter = QtWidgets.QSplitter(self.centralwidget)
#         self.splitter.setEnabled(True)
#         self.splitter.setGeometry(QtCore.QRect(510, 150, 1049, 561))
#         self.splitter.setStyleSheet("#splitter::handle{background: 1px solid  rgba(200, 200, 200,100);}")
#         self.splitter.setFrameShape(QtWidgets.QFrame.NoFrame)
#         self.splitter.setLineWidth(10)
#         self.splitter.setOrientation(QtCore.Qt.Horizontal)
#         self.splitter.setHandleWidth(1)
#         self.splitter.setObjectName("splitter")
#         self.raw_video = Label_click_Mouse(self.splitter)
#         self.raw_video.setEnabled(True)
#         sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
#         sizePolicy.setHorizontalStretch(0)
#         sizePolicy.setVerticalStretch(0)
#         sizePolicy.setHeightForWidth(self.raw_video.sizePolicy().hasHeightForWidth())
#         self.raw_video.setSizePolicy(sizePolicy)
#         self.raw_video.setMinimumSize(QtCore.QSize(200, 0))
#         font = QtGui.QFont()
#         font.setFamily("微软雅黑")
#         font.setPointSize(36)
#         self.raw_video.setFont(font)
#         self.raw_video.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
#         self.raw_video.setStyleSheet("\n"
# "background-color: rgb(0,0,0,0.8);")
#         self.raw_video.setText("")
#         self.raw_video.setScaledContents(False)
#         self.raw_video.setAlignment(QtCore.Qt.AlignCenter)
#         self.raw_video.setObjectName("raw_video")
#         self.out_video_2 = Label_click_Mouse(self.splitter)
#         self.out_video_2.setEnabled(True)
#         sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
#         sizePolicy.setHorizontalStretch(0)
#         sizePolicy.setVerticalStretch(0)
#         sizePolicy.setHeightForWidth(self.out_video_2.sizePolicy().hasHeightForWidth())
#         self.out_video_2.setSizePolicy(sizePolicy)
#         self.out_video_2.setMinimumSize(QtCore.QSize(200, 0))
#         font = QtGui.QFont()
#         font.setFamily("微软雅黑")
#         font.setPointSize(36)
#         self.out_video_2.setFont(font)
#         self.out_video_2.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
#         self.out_video_2.setStyleSheet("background-color: rgb(0,0,0,0.8);")
#         self.out_video_2.setText("")
#         self.out_video_2.setScaledContents(False)
#         self.out_video_2.setAlignment(QtCore.Qt.AlignCenter)
#         self.out_video_2.setObjectName("out_video_2")
#         self.label_3 = QtWidgets.QLabel(self.centralwidget)
#         self.label_3.setGeometry(QtCore.QRect(1030, 90, 181, 51))
#         self.label_3.setStyleSheet("font: 14pt \"黑体\";")
#         self.label_3.setObjectName("label_3")
#         self.label_4 = QtWidgets.QLabel(self.centralwidget)
#         self.label_4.setGeometry(QtCore.QRect(510, 90, 181, 51))
#         self.label_4.setStyleSheet("font: 14pt \"黑体\";")
#         self.label_4.setObjectName("label_4")
#         self.toolButton_model_2 = QtWidgets.QToolButton(self.centralwidget)
#         self.toolButton_model_2.setGeometry(QtCore.QRect(60, 220, 50, 50))
#         self.toolButton_model_2.setMaximumSize(QtCore.QSize(50, 50))
#         self.toolButton_model_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
#         self.toolButton_model_2.setAutoFillBackground(False)
#         self.toolButton_model_2.setStyleSheet("background-color: transparent;")
#         icon5 = QtGui.QIcon()
#         icon5.addPixmap(QtGui.QPixmap(":/pic/images/camera01.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.toolButton_model_2.setIcon(icon5)
#         self.toolButton_model_2.setIconSize(QtCore.QSize(50, 50))
#         self.toolButton_model_2.setObjectName("toolButton_model_2")
#         self.textEdit_model_2 = QtWidgets.QTextEdit(self.centralwidget)
#         self.textEdit_model_2.setGeometry(QtCore.QRect(130, 230, 261, 31))
#         self.textEdit_model_2.setStyleSheet("background-color: transparent;\n"
# "border-color: rgb(0, 170, 255);\n"
# "color: rgb(0, 170, 255);")
#         self.textEdit_model_2.setObjectName("textEdit_model_2")
#         self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
#         self.layoutWidget.setGeometry(QtCore.QRect(550, 730, 971, 42))
#         self.layoutWidget.setObjectName("layoutWidget")
#         self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.layoutWidget)
#         self.horizontalLayout_12.setContentsMargins(0, 0, 0, 0)
#         self.horizontalLayout_12.setObjectName("horizontalLayout_12")
#         self.runButton = QtWidgets.QPushButton(self.layoutWidget)
#         self.runButton.setMinimumSize(QtCore.QSize(40, 40))
#         self.runButton.setStyleSheet("QPushButton {\n"
# "border-style: solid;\n"
# "border-width: 0px;\n"
# "border-radius: 0px;\n"
# "background-color: rgba(223, 223, 223, 0);\n"
# "}\n"
# "QPushButton::focus{outline: none;}\n"
# "QPushButton::hover {\n"
# "border-style: solid;\n"
# "border-width: 0px;\n"
# "border-radius: 0px;\n"
# "background-color: rgba(223, 223, 223, 150);}")
#         self.runButton.setText("")
#         icon6 = QtGui.QIcon()
#         icon6.addPixmap(QtGui.QPixmap(":/pic/images/start.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         icon6.addPixmap(QtGui.QPixmap(":/pic/images/goon.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
#         icon6.addPixmap(QtGui.QPixmap(":/pic/images/start.png"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
#         icon6.addPixmap(QtGui.QPixmap(":/pic/images/goon.png"), QtGui.QIcon.Disabled, QtGui.QIcon.On)
#         icon6.addPixmap(QtGui.QPixmap(":/pic/images/start.png"), QtGui.QIcon.Active, QtGui.QIcon.Off)
#         icon6.addPixmap(QtGui.QPixmap(":/pic/images/goon.png"), QtGui.QIcon.Active, QtGui.QIcon.On)
#         icon6.addPixmap(QtGui.QPixmap(":/pic/images/start.png"), QtGui.QIcon.Selected, QtGui.QIcon.Off)
#         icon6.addPixmap(QtGui.QPixmap(":/pic/images/goon.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
#         self.runButton.setIcon(icon6)
#         self.runButton.setIconSize(QtCore.QSize(30, 30))
#         self.runButton.setCheckable(True)
#         self.runButton.setObjectName("runButton")
#         self.horizontalLayout_12.addWidget(self.runButton)
#         self.progressBar = QtWidgets.QProgressBar(self.layoutWidget)
#         self.progressBar.setMaximumSize(QtCore.QSize(16777215, 5))
#         self.progressBar.setStyleSheet("QProgressBar{ color: rgb(255, 255, 255); font:12pt; border-radius:2px; text-align:center; border:none; background-color: rgba(215, 215, 215,100);} \n"
# "QProgressBar:chunk{ border-radius:0px; background: rgba(55, 55, 55, 200);}")
#         self.progressBar.setMaximum(1000)
#         self.progressBar.setProperty("value", 0)
#         self.progressBar.setTextVisible(False)
#         self.progressBar.setObjectName("progressBar")
#         self.horizontalLayout_12.addWidget(self.progressBar)
#         self.stopButton = QtWidgets.QPushButton(self.layoutWidget)
#         self.stopButton.setMinimumSize(QtCore.QSize(40, 40))
#         self.stopButton.setStyleSheet("QPushButton {\n"
# "border-style: solid;\n"
# "border-width: 0px;\n"
# "border-radius: 0px;\n"
# "background-color: rgba(223, 223, 223, 0);\n"
# "}\n"
# "QPushButton::focus{outline: none;}\n"
# "QPushButton::hover {\n"
# "border-style: solid;\n"
# "border-width: 0px;\n"
# "border-radius: 0px;\n"
# "background-color: rgba(223, 223, 223, 150);}")
#         self.stopButton.setText("")
#         icon7 = QtGui.QIcon()
#         icon7.addPixmap(QtGui.QPixmap(":/pic/images/stop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.stopButton.setIcon(icon7)
#         self.stopButton.setIconSize(QtCore.QSize(30, 40))
#         self.stopButton.setObjectName("stopButton")
#         self.horizontalLayout_12.addWidget(self.stopButton)
#         self.frame_2 = QtWidgets.QFrame(self.centralwidget)
#         self.frame_2.setGeometry(QtCore.QRect(-10, 590, 221, 201))
#         self.frame_2.setStyleSheet("\n"
# "")
#         self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
#         self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
#         self.frame_2.setObjectName("frame_2")
#         self.pushButton_3 = QtWidgets.QPushButton(self.frame_2)
#         self.pushButton_3.setGeometry(QtCore.QRect(60, 10, 121, 41))
#         self.pushButton_3.setStyleSheet("QPushButton{\n"
# "background:#03a9f4;\n"
# "color:#fff;\n"
# "border-radius:15px;\n"
# "}")
#         self.pushButton_3.setObjectName("pushButton_3")
#         self.lcdNumber = QtWidgets.QLCDNumber(self.frame_2)
#         self.lcdNumber.setGeometry(QtCore.QRect(110, 70, 61, 41))
#         self.lcdNumber.setObjectName("lcdNumber")
#         self.label_6 = QtWidgets.QLabel(self.frame_2)
#         self.label_6.setGeometry(QtCore.QRect(30, 70, 71, 51))
#         self.label_6.setObjectName("label_6")
#         self.label_7 = QtWidgets.QLabel(self.frame_2)
#         self.label_7.setGeometry(QtCore.QRect(30, 140, 81, 31))
#         self.label_7.setObjectName("label_7")
#         self.lcdNumber_2 = QtWidgets.QLCDNumber(self.frame_2)
#         self.lcdNumber_2.setGeometry(QtCore.QRect(110, 130, 61, 41))
#         self.lcdNumber_2.setObjectName("lcdNumber_2")
#         self.frame = QtWidgets.QFrame(self.centralwidget)
#         self.frame.setGeometry(QtCore.QRect(210, 590, 271, 201))
#         self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
#         self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
#         self.frame.setObjectName("frame")
#         self.label_class = QtWidgets.QLabel(self.frame)
#         self.label_class.setGeometry(QtCore.QRect(30, 80, 86, 31))
#         font = QtGui.QFont()
#         font.setFamily("华文仿宋")
#         font.setPointSize(18)
#         self.label_class.setFont(font)
#         self.label_class.setObjectName("label_class")
#         self.label_conf = QtWidgets.QLabel(self.frame)
#         self.label_conf.setGeometry(QtCore.QRect(30, 140, 111, 31))
#         font = QtGui.QFont()
#         font.setFamily("华文仿宋")
#         font.setPointSize(18)
#         self.label_conf.setFont(font)
#         self.label_conf.setObjectName("label_conf")
#         self.label_class_result = QtWidgets.QLabel(self.frame)
#         self.label_class_result.setGeometry(QtCore.QRect(100, 70, 171, 29))
#         font = QtGui.QFont()
#         font.setPointSize(18)
#         self.label_class_result.setFont(font)
#         self.label_class_result.setStyleSheet("color:rgb(0, 170, 255)")
#         self.label_class_result.setObjectName("label_class_result")
#         self.label_score_result = QtWidgets.QLabel(self.frame)
#         self.label_score_result.setGeometry(QtCore.QRect(100, 130, 61, 31))
#         font = QtGui.QFont()
#         font.setPointSize(18)
#         self.label_score_result.setFont(font)
#         self.label_score_result.setStyleSheet("color: rgb(0, 170, 255);")
#         self.label_score_result.setObjectName("label_score_result")
#         self.comboBox_select = QtWidgets.QComboBox(self.frame)
#         self.comboBox_select.setGeometry(QtCore.QRect(90, 20, 141, 31))
#         font = QtGui.QFont()
#         font.setFamily("楷体")
#         font.setPointSize(12)
#         font.setBold(False)
#         font.setItalic(False)
#         font.setWeight(50)
#         self.comboBox_select.setFont(font)
#         self.comboBox_select.setFocusPolicy(QtCore.Qt.ClickFocus)
#         self.comboBox_select.setStyleSheet("color: rgb(43, 89, 124);\n"
# "\n"
# "font: 12pt \"楷体\";")
#         self.comboBox_select.setIconSize(QtCore.QSize(36, 36))
#         self.comboBox_select.setObjectName("comboBox_select")
#         self.comboBox_select.addItem("")
#         self.label_picSelect = QtWidgets.QLabel(self.frame)
#         self.label_picSelect.setGeometry(QtCore.QRect(20, 10, 51, 51))
#         self.label_picSelect.setStyleSheet("border-image: url(:/pic/images/picselect.png)")
#         self.label_picSelect.setText("")
#         self.label_picSelect.setObjectName("label_picSelect")
#         self.toolButton_model.raise_()
#         self.textEdit_model.raise_()
#         self.toolButton_camera.raise_()
#         self.textEdit_2.raise_()
#         self.toolButton_file.raise_()
#         self.textEdit_file.raise_()
#         self.toolButton_video.raise_()
#         self.textEdit_video.raise_()
#         self.pushButton_4.raise_()
#         self.pushButton_5.raise_()
#         self.splitter.raise_()
#         self.label_3.raise_()
#         self.label_4.raise_()
#         self.toolButton_model_2.raise_()
#         self.textEdit_model_2.raise_()
#         self.layoutWidget.raise_()
#         self.label_title.raise_()
#         self.frame_2.raise_()
#         self.frame.raise_()
#         MainWindow.setCentralWidget(self.centralwidget)
#         self.statusbar = QtWidgets.QStatusBar(MainWindow)
#         self.statusbar.setObjectName("statusbar")
#         MainWindow.setStatusBar(self.statusbar)
#         self.toolBar = QtWidgets.QToolBar(MainWindow)
#         font = QtGui.QFont()
#         font.setPointSize(9)
#         self.toolBar.setFont(font)
#         self.toolBar.setIconSize(QtCore.QSize(30, 40))
#         self.toolBar.setObjectName("toolBar")
#         MainWindow.addToolBar(QtCore.Qt.LeftToolBarArea, self.toolBar)
#         self.actionsave = QtWidgets.QAction(MainWindow)
#         icon8 = QtGui.QIcon()
#         icon8.addPixmap(QtGui.QPixmap(":/pic/images/save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.actionsave.setIcon(icon8)
#         self.actionsave.setObjectName("actionsave")
#         self.actionsetting = QtWidgets.QAction(MainWindow)
#         icon9 = QtGui.QIcon()
#         icon9.addPixmap(QtGui.QPixmap(":/pic/images/setting.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.actionsetting.setIcon(icon9)
#         self.actionsetting.setObjectName("actionsetting")
#         self.actionauthor = QtWidgets.QAction(MainWindow)
#         icon10 = QtGui.QIcon()
#         icon10.addPixmap(QtGui.QPixmap(":/pic/images/author.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.actionauthor.setIcon(icon10)
#         self.actionauthor.setObjectName("actionauthor")
#         self.actionversion = QtWidgets.QAction(MainWindow)
#         icon11 = QtGui.QIcon()
#         icon11.addPixmap(QtGui.QPixmap(":/pic/images/version.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.actionversion.setIcon(icon11)
#         self.actionversion.setObjectName("actionversion")
#         self.actionhelp = QtWidgets.QAction(MainWindow)
#         icon12 = QtGui.QIcon()
#         icon12.addPixmap(QtGui.QPixmap(":/pic/images/help.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
#         self.actionhelp.setIcon(icon12)
#         self.actionhelp.setObjectName("actionhelp")
#         self.toolBar.addAction(self.actionsave)
#         self.toolBar.addAction(self.actionsetting)
#         self.toolBar.addSeparator()
#         self.toolBar.addAction(self.actionversion)
#         self.toolBar.addAction(self.actionhelp)
#         self.toolBar.addAction(self.actionauthor)
#         self.raw_video.setBuddy(self.raw_video)
#
#         self.retranslateUi(MainWindow)
#         QtCore.QMetaObject.connectSlotsByName(MainWindow)
#
#     def retranslateUi(self, MainWindow):
#         _translate = QtCore.QCoreApplication.translate
#         MainWindow.setWindowTitle(_translate("MainWindow", "pedestrian_detection"))
#         self.toolButton_model.setToolTip(_translate("MainWindow", "<html><head/><body><p>选择模型</p></body></html>"))
#         self.toolButton_model.setText(_translate("MainWindow", "..."))
#         self.textEdit_model.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
# "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
# "p, li { white-space: pre-wrap; }\n"
# "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
# "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt;\">模型选择</span></p></body></html>"))
#         self.toolButton_camera.setToolTip(_translate("MainWindow", "<html><head/><body><p>调用实时摄像头</p></body></html>"))
#         self.toolButton_camera.setText(_translate("MainWindow", "..."))
#         self.textEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
# "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
# "p, li { white-space: pre-wrap; }\n"
# "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
# "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt;\">实时摄像头</span></p></body></html>"))
#         self.toolButton_file.setToolTip(_translate("MainWindow", "<html><head/><body><p>选择检测图片</p></body></html>"))
#         self.toolButton_file.setText(_translate("MainWindow", "..."))
#         self.textEdit_file.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
# "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
# "p, li { white-space: pre-wrap; }\n"
# "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
# "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt;\">选择检测图片</span></p></body></html>"))
#         self.toolButton_video.setToolTip(_translate("MainWindow", "<html><head/><body><p>选择检测视频</p></body></html>"))
#         self.toolButton_video.setText(_translate("MainWindow", "..."))
#         self.textEdit_video.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
# "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
# "p, li { white-space: pre-wrap; }\n"
# "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
# "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt;\">选择检测视频</span></p></body></html>"))
#         self.label_title.setToolTip(_translate("MainWindow", "<html><head/><body><p>version: v1.0</p><p>author: 思绪无限</p></body></html>"))
#         self.label_title.setText(_translate("MainWindow", "行人检测与追踪系统"))
#         self.pushButton_4.setText(_translate("MainWindow", "开始检测"))
#         self.pushButton_5.setText(_translate("MainWindow", "停止检测"))
#         self.label_3.setText(_translate("MainWindow", "检测结果"))
#         self.label_4.setText(_translate("MainWindow", "检测文件"))
#         self.toolButton_model_2.setToolTip(_translate("MainWindow", "<html><head/><body><p>选择视频接口</p></body></html>"))
#         self.toolButton_model_2.setText(_translate("MainWindow", "..."))
#         self.textEdit_model_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
# "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
# "p, li { white-space: pre-wrap; }\n"
# "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
# "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt;\">选择视频接口</span></p></body></html>"))
#         self.pushButton_3.setText(_translate("MainWindow", "类别数统计"))
#         self.label_6.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; color:#ffffff;\">行人数：</span></p></body></html>"))
#         self.label_7.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; color:#ffffff;\">车辆数：</span></p></body></html>"))
#         self.label_class.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; color:#ffffff;\">类别：<br/></span></p></body></html>"))
#         self.label_conf.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; color:#ffffff;\">置信度：<br/></span></p></body></html>"))
#         self.label_class_result.setText(_translate("MainWindow", "None"))
#         self.label_score_result.setText(_translate("MainWindow", "0"))
#         self.comboBox_select.setCurrentText(_translate("MainWindow", "所有目标"))
#         self.comboBox_select.setItemText(0, _translate("MainWindow", "所有目标"))
#         self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
#         self.actionsave.setText(_translate("MainWindow", "save"))
#         self.actionsave.setToolTip(_translate("MainWindow", "保存"))
#         self.actionsave.setShortcut(_translate("MainWindow", "Ctrl+S"))
#         self.actionsetting.setText(_translate("MainWindow", "setting"))
#         self.actionsetting.setToolTip(_translate("MainWindow", "设置"))
#         self.actionsetting.setShortcut(_translate("MainWindow", "Ctrl+T"))
#         self.actionauthor.setText(_translate("MainWindow", "author"))
#         self.actionauthor.setToolTip(_translate("MainWindow", "联系我们"))
#         self.actionauthor.setShortcut(_translate("MainWindow", "F3"))
#         self.actionversion.setText(_translate("MainWindow", "version"))
#         self.actionversion.setToolTip(_translate("MainWindow", "版本信息"))
#         self.actionversion.setShortcut(_translate("MainWindow", "F1"))
#         self.actionhelp.setText(_translate("MainWindow", "help"))
#         self.actionhelp.setToolTip(_translate("MainWindow", "帮助文档"))
#         self.actionhelp.setShortcut(_translate("MainWindow", "F2"))
# from MouseLabel import Label_click_Mouse
#
#
